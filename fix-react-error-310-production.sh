#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîß CORRECTION REACT ERROR #310 PRODUCTION${NC}"
echo "==========================================="

echo -e "${YELLOW}üìù 1. V√âRIFICATION √âTAT PRODUCTION${NC}"

# V√©rifier si Docker est en cours
if docker ps | grep -q logiflow_app; then
    echo "‚úÖ Container logiflow_app d√©tect√©"
    
    # Test API structure actuelle
    echo -e "${YELLOW}üìä 2. TEST STRUCTURE APIs PRODUCTION${NC}"
    
    # Login admin
    echo "üîê Login admin..."
    docker exec logiflow_app curl -s -c /tmp/prod_cookies -X POST http://localhost:3000/api/login \
      -H 'Content-Type: application/json' \
      -d '{"username":"admin","password":"admin"}' > /dev/null
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Login r√©ussi"
        
        # Test structure permissions
        echo "üîç Structure permissions..."
        PERM_RESPONSE=$(docker exec logiflow_app curl -s -b /tmp/prod_cookies http://localhost:3000/api/permissions)
        PERM_COUNT=$(echo "$PERM_RESPONSE" | jq '. | length' 2>/dev/null || echo "0")
        
        if [ "$PERM_COUNT" -gt "0" ]; then
            echo "‚úÖ Permissions r√©cup√©r√©es: $PERM_COUNT"
            
            # V√©rifier displayName et action
            MISSING_FIELDS=$(echo "$PERM_RESPONSE" | jq -r '.[] | select(.displayName == null or .action == null) | .name' 2>/dev/null)
            if [ -z "$MISSING_FIELDS" ]; then
                echo "‚úÖ Structure permissions conforme (displayName + action pr√©sents)"
            else
                echo "‚ùå Propri√©t√©s manquantes d√©tect√©es"
                echo -e "${RED}‚ö†Ô∏è CAUSE PROBABLE DU REACT ERROR #310${NC}"
            fi
        else
            echo "‚ùå Erreur r√©cup√©ration permissions"
        fi
        
        # Test structure r√¥les
        echo "üîç Structure r√¥les..."
        ROLES_RESPONSE=$(docker exec logiflow_app curl -s -b /tmp/prod_cookies http://localhost:3000/api/roles)
        ROLES_COUNT=$(echo "$ROLES_RESPONSE" | jq '. | length' 2>/dev/null || echo "0")
        
        if [ "$ROLES_COUNT" -gt "0" ]; then
            echo "‚úÖ R√¥les r√©cup√©r√©s: $ROLES_COUNT"
        else
            echo "‚ùå Erreur r√©cup√©ration r√¥les"
        fi
        
    else
        echo "‚ùå √âchec authentification production"
    fi
    
else
    echo "‚ùå Container logiflow_app non trouv√©"
    echo "Application probablement pas d√©ploy√©e en production"
fi

echo ""
echo -e "${YELLOW}üìù 3. APPLICATION CORRECTIONS PRODUCTION${NC}"

echo "üîÑ Mise √† jour fichiers production corrig√©s..."

# Copier les fichiers corrig√©s vers le container
if docker ps | grep -q logiflow_app; then
    
    # Backup des fichiers actuels
    echo "üíæ Backup fichiers actuels..."
    docker exec logiflow_app cp /app/dist/storage.production.js /app/dist/storage.production.js.backup 2>/dev/null
    docker exec logiflow_app cp /app/dist/routes.production.js /app/dist/routes.production.js.backup 2>/dev/null
    
    # Reconstruire le container avec les corrections
    echo "üî® Rebuild application avec corrections..."
    echo "COMMANDE √Ä EX√âCUTER:"
    echo -e "${GREEN}docker-compose down && docker-compose up --build -d${NC}"
    echo ""
    echo "OU directement:"
    echo -e "${GREEN}cd /path/to/logiflow && docker-compose up --build -d${NC}"
    
else
    echo "‚ö†Ô∏è Container non actif - d√©ploiement manuel requis"
fi

echo ""
echo -e "${YELLOW}üìù 4. V√âRIFICATION POST-CORRECTION${NC}"
echo "Apr√®s rebuild, tester:"
echo "1. Login admin/admin"
echo "2. Navigation vers page Gestion des R√¥les"
echo "3. V√©rifier absence React Error #310"

echo ""
echo -e "${GREEN}‚úÖ SCRIPT CORRECTION PR√äT${NC}"
echo "Les corrections de structure ont √©t√© appliqu√©es dans:"
echo "- server/storage.production.ts (displayName + action ajout√©s)"
echo "- Permissions et r√¥les retournent maintenant structure compatible frontend"
echo ""
echo -e "${BLUE}üöÄ PROCHAINE √âTAPE: Rebuild Docker en production${NC}"