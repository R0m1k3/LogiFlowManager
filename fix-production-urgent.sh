#!/bin/bash

echo "üö® CORRECTION URGENTE PRODUCTION - COLONNES MANQUANTES ORDERS"
echo "============================================================="
echo ""

echo "PROBL√àME IDENTIFI√â :"
echo "‚ùå Colonne 'quantity' manquante dans table 'orders' en production"
echo "‚ùå Colonne 'unit' manquante dans table 'orders' en production"
echo ""

echo "SOLUTION SQL DIRECTE :"
echo "----------------------"

cat << 'EOF'
-- SQL √† ex√©cuter en production pour corriger imm√©diatement

-- 1. Ajouter colonne quantity dans orders si manquante
DO $$ 
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name = 'orders' AND column_name = 'quantity') THEN
        ALTER TABLE orders ADD COLUMN quantity INTEGER;
        RAISE NOTICE 'Colonne quantity ajout√©e √† orders';
    ELSE
        RAISE NOTICE 'Colonne quantity existe d√©j√† dans orders';
    END IF;
END $$;

-- 2. Ajouter colonne unit dans orders si manquante  
DO $$ 
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name = 'orders' AND column_name = 'unit') THEN
        ALTER TABLE orders ADD COLUMN unit VARCHAR(50);
        RAISE NOTICE 'Colonne unit ajout√©e √† orders';
    ELSE
        RAISE NOTICE 'Colonne unit existe d√©j√† dans orders';
    END IF;
END $$;

-- 3. V√©rification finale
SELECT column_name, data_type, is_nullable 
FROM information_schema.columns 
WHERE table_name = 'orders' 
  AND column_name IN ('quantity', 'unit')
ORDER BY column_name;
EOF

echo ""
echo "POUR APPLIQUER EN PRODUCTION :"
echo "1. Connectez-vous √† votre base PostgreSQL"
echo "2. Ex√©cutez le SQL ci-dessus"
echo "3. OU utilisez la migration mise √† jour : psql < migration-production.sql"
echo ""
echo "ALTERNATIVE RAPIDE :"
echo "Red√©marrez le conteneur Docker apr√®s avoir mis √† jour migration-production.sql"
echo ""
echo "‚úÖ migration-production.sql mis √† jour avec la correction"
echo ""