#!/bin/bash

# Script de correction urgente pour la production
# Corrige le probl√®me de contrainte deliveries_status_check

echo "üîß CORRECTION URGENTE PRODUCTION - Deliveries Schema"
echo "=================================================="

# Connexion √† la base Docker
CONTAINER_NAME="logiflow-postgres"
DB_NAME="logiflow_db"
DB_USER="logiflow_admin"

echo "üìã √âtape 1: Sauvegarde de s√©curit√©..."
docker exec $CONTAINER_NAME pg_dump -U $DB_USER -d $DB_NAME > backup_before_fix_$(date +%Y%m%d_%H%M%S).sql

echo "üîç √âtape 2: Diagnostic du probl√®me..."
docker exec $CONTAINER_NAME psql -U $DB_USER -d $DB_NAME -c "
SELECT column_name, data_type 
FROM information_schema.columns 
WHERE table_name = 'deliveries' 
ORDER BY ordinal_position;
"

echo "üõ†Ô∏è  √âtape 3: Application du correctif..."
docker exec -i $CONTAINER_NAME psql -U $DB_USER -d $DB_NAME < fix-production-deliveries.sql

echo "‚úÖ √âtape 4: V√©rification..."
docker exec $CONTAINER_NAME psql -U $DB_USER -d $DB_NAME -c "
SELECT conname, pg_get_constraintdef(oid) 
FROM pg_constraint 
WHERE conrelid = 'deliveries'::regclass AND contype = 'c';
"

echo "üîÑ √âtape 5: Red√©marrage application..."
docker restart logiflow-app

echo "=================================================="
echo "‚úÖ CORRECTION TERMIN√âE"
echo "Testez maintenant la cr√©ation de livraison"
echo "=================================================="