#!/bin/bash

echo "üö® CORRECTION D√âFINITIVE DES R√îLES PRODUCTION"
echo "============================================="
echo ""

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${RED}‚ö†Ô∏è  ATTENTION: Cette op√©ration va R√âINITIALISER compl√®tement les r√¥les et permissions${NC}"
echo -e "${RED}‚ö†Ô∏è  Les assignations utilisateurs seront pr√©serv√©es avec les nouveaux IDs${NC}"
echo ""

# V√©rification que le conteneur PostgreSQL est en cours d'ex√©cution
if ! docker ps | grep -q "logiflow-postgres"; then
    echo -e "${RED}‚ùå Le conteneur PostgreSQL n'est pas en cours d'ex√©cution${NC}"
    echo "Veuillez d√©marrer l'application avec: docker-compose up -d"
    exit 1
fi

echo -e "${BLUE}üìä √âTAT ACTUEL (AVANT CORRECTION):${NC}"
echo "=================================="

# Afficher l'√©tat corrompu actuel
docker exec -i logiflow-postgres psql -U logiflow_admin -d logiflow_db << 'EOF'
\echo 'R√îLES CORROMPUS ACTUELS:'
SELECT id, name, display_name, color FROM roles ORDER BY id;

\echo ''
\echo 'ASSIGNATIONS ACTUELLES:'
SELECT ur.user_id, ur.role_id, r.name 
FROM user_roles ur 
JOIN roles r ON ur.role_id = r.id;
EOF

echo ""
echo -e "${YELLOW}‚ùì Voulez-vous continuer la r√©initialisation compl√®te ? (y/N)${NC}"
read -r response

if [[ ! "$response" =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}‚èπÔ∏è  Op√©ration annul√©e${NC}"
    exit 0
fi

echo ""
echo -e "${BLUE}üîß APPLICATION DE LA CORRECTION COMPL√àTE...${NC}"
echo "==========================================="

# Cr√©er une sauvegarde avant correction
echo -e "${YELLOW}üíæ Cr√©ation d'une sauvegarde...${NC}"
docker exec logiflow-postgres pg_dump -U logiflow_admin -d logiflow_db --schema-only > backup_schema_$(date +%Y%m%d_%H%M%S).sql

# Appliquer le script de correction
echo -e "${YELLOW}üîÑ Application du script de correction...${NC}"
if docker exec -i logiflow-postgres psql -U logiflow_admin -d logiflow_db < fix-production-data-force.sql; then
    echo -e "${GREEN}‚úÖ Correction appliqu√©e avec succ√®s !${NC}"
else
    echo -e "${RED}‚ùå Erreur lors de l'application de la correction${NC}"
    exit 1
fi

echo ""
echo -e "${BLUE}‚úÖ V√âRIFICATION DES R√âSULTATS:${NC}"
echo "=============================="

# V√©rifier les corrections
docker exec -i logiflow-postgres psql -U logiflow_admin -d logiflow_db << 'EOF'
\echo 'R√îLES APR√àS CORRECTION:'
SELECT id, name, display_name, color, is_active FROM roles ORDER BY id;

\echo ''
\echo 'NOMBRE DE PERMISSIONS:'
SELECT COUNT(*) as total_permissions FROM permissions;

\echo ''
\echo 'ASSIGNATIONS UTILISATEURS APR√àS CORRECTION:'
SELECT ur.user_id, ur.role_id, r.name as role_name, r.display_name, r.color 
FROM user_roles ur 
JOIN roles r ON ur.role_id = r.id 
ORDER BY ur.user_id;
EOF

echo ""
echo -e "${GREEN}üéâ CORRECTION TERMIN√âE AVEC SUCC√àS !${NC}"
echo "===================================="
echo ""
echo -e "${YELLOW}üìã R√îLES CORRIG√âS:${NC}"
echo "‚Ä¢ ID 1: Administrateur (Rouge #dc2626)"
echo "‚Ä¢ ID 2: Manager (Bleu #2563eb)"  
echo "‚Ä¢ ID 3: Employ√© (Vert #16a34a)"
echo "‚Ä¢ ID 4: Directeur (Violet #7c3aed)"
echo ""
echo -e "${YELLOW}üîÑ RED√âMARRAGE N√âCESSAIRE:${NC}"
echo "docker-compose restart logiflow-app"
echo ""
echo -e "${GREEN}‚úÖ Les r√¥les utilisent maintenant les bons IDs s√©quentiels (1-4)${NC}"
echo -e "${GREEN}‚úÖ Plus d'erreur 'Le r√¥le s√©lectionn√© n'est pas valide'${NC}"