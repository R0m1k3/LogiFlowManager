#!/bin/bash

echo "üö® CORRECTION URGENTE PRODUCTION - Sch√©ma customer_orders"
echo "========================================================="

# V√©rifier si on est en production Docker
if docker-compose ps | grep -q logiflow; then
    echo "‚úÖ Environnement Docker d√©tect√©"
    
    # Ex√©cuter le script SQL de correction
    echo "üîß Application du correctif sch√©ma..."
    
    # M√©thode 1 : Via fichier SQL
    if [ -f "fix-customer-orders-schema.sql" ]; then
        docker-compose exec -T postgres psql -U logiflow_admin -d logiflow_db < fix-customer-orders-schema.sql
    else
        # M√©thode 2 : Commande directe si fichier non trouv√©
        echo "üìÑ Fichier SQL non trouv√©, ex√©cution commande directe..."
        docker-compose exec -T postgres psql -U logiflow_admin -d logiflow_db -c "ALTER TABLE customer_orders ADD COLUMN IF NOT EXISTS customer_email VARCHAR(255);"
    fi
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Correctif sch√©ma appliqu√© avec succ√®s"
        
        # Red√©marrer l'application pour prendre en compte les changements
        echo "üîÑ Red√©marrage application..."
        docker-compose restart logiflow
        
        echo "‚è≥ Attente red√©marrage..."
        sleep 20
        
        # V√©rifier que la colonne existe maintenant
        echo "üîç V√©rification colonne customer_email..."
        COLUMN_EXISTS=$(docker-compose exec -T postgres psql -U logiflow_admin -d logiflow_db -c "SELECT column_name FROM information_schema.columns WHERE table_name = 'customer_orders' AND column_name = 'customer_email';" | grep customer_email | wc -l)
        
        if [ "$COLUMN_EXISTS" -gt 0 ]; then
            echo "‚úÖ Colonne customer_email existe maintenant"
        else
            echo "‚ùå Colonne customer_email toujours manquante"
        fi
        
        # Test de l'API
        echo "üß™ Test API customer-orders..."
        curl -s http://localhost:3000/api/customer-orders > /dev/null
        if [ $? -eq 0 ]; then
            echo "‚úÖ API customer-orders fonctionnelle"
        else
            echo "‚ùå API customer-orders toujours non accessible"
        fi
        
    else
        echo "‚ùå Erreur lors de l'application du correctif"
        exit 1
    fi
    
else
    echo "‚ùå Environnement Docker non d√©tect√©"
    echo "‚ÑπÔ∏è  Ex√©cutez manuellement le script SQL fix-customer-orders-schema.sql"
    exit 1
fi

echo ""
echo "üéâ CORRECTION TERMIN√âE !"
echo ""
echo "üéØ TESTS √Ä EFFECTUER :"
echo "1. Aller dans Commandes Client"
echo "2. Cliquer sur 'Nouvelle Commande'"
echo "3. Remplir le formulaire et valider"
echo "4. V√©rifier que la cr√©ation fonctionne sans erreur 500"
echo ""
echo "üìã La colonne customer_email est maintenant disponible !"