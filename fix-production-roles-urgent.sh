#!/bin/bash

# üö® SOLUTION URGENTE - Correction r√¥les production
# Script simplifi√© pour corriger imm√©diatement l'incoh√©rence des r√¥les

echo "üö® CORRECTION URGENTE - R√¥les Production LogiFlow"
echo "=================================================="

# V√©rification DATABASE_URL
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå Variable DATABASE_URL non d√©finie"
    echo "üí° Configurez-la avec: export DATABASE_URL='votre_url_postgresql'"
    exit 1
fi

# Test de connexion
echo "üîó Test de connexion √† la base..."
psql $DATABASE_URL -c "SELECT version();" > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "‚ùå Connexion √©chou√©e - V√©rifiez DATABASE_URL"
    exit 1
fi
echo "‚úÖ Connexion r√©ussie"

echo ""
echo "üîç DIAGNOSTIC AVANT CORRECTION"
echo "------------------------------"
psql $DATABASE_URL -c "
SELECT 
  u.username, 
  u.role as users_role,
  COALESCE(r.name, 'AUCUN') as user_roles_table,
  CASE 
    WHEN u.role = r.name THEN '‚úÖ OK'
    WHEN r.name IS NULL THEN '‚ùå MANQUANT' 
    ELSE '‚ùå DIFF√âRENT'
  END as status
FROM users u
LEFT JOIN user_roles ur ON u.id = ur.user_id
LEFT JOIN roles r ON ur.role_id = r.id
ORDER BY u.username;
"

echo ""
echo "üîß APPLICATION DU CORRECTIF"
echo "---------------------------"

# Sauvegarde rapide
echo "üíæ Sauvegarde rapide..."
psql $DATABASE_URL -c "
CREATE TABLE IF NOT EXISTS user_roles_backup_$(date +%Y%m%d) AS 
SELECT * FROM user_roles;
" > /dev/null

# Correction des couleurs des r√¥les
echo "üé® Correction des couleurs..."
psql $DATABASE_URL -c "
UPDATE roles SET color = '#f87171' WHERE name = 'admin';
UPDATE roles SET color = '#60a5fa' WHERE name = 'manager';  
UPDATE roles SET color = '#4ade80' WHERE name = 'employee';
UPDATE roles SET color = '#a78bfa' WHERE name = 'directeur';
"

# Nettoyage et resynchronisation
echo "üîÑ Resynchronisation des r√¥les..."
psql $DATABASE_URL -c "
-- Nettoyer les assignations existantes
DELETE FROM user_roles;

-- Resynchroniser avec la colonne users.role
INSERT INTO user_roles (user_id, role_id, assigned_by, assigned_at)
SELECT 
  u.id,
  r.id,
  'admin_local',
  NOW()
FROM users u
JOIN roles r ON u.role = r.name
WHERE u.role IS NOT NULL;
"

echo ""
echo "‚úÖ CORRECTION APPLIQU√âE"
echo ""
echo "üß™ V√âRIFICATION FINALE"
echo "----------------------"
psql $DATABASE_URL -c "
SELECT 
  u.username, 
  u.role as users_role,
  r.name as user_roles_table,
  r.color,
  CASE 
    WHEN u.role = r.name THEN '‚úÖ SYNCHRONIS√â'
    ELSE '‚ùå PROBL√àME'
  END as status
FROM users u
LEFT JOIN user_roles ur ON u.id = ur.user_id
LEFT JOIN roles r ON ur.role_id = r.id
ORDER BY u.username;
"

echo ""
echo "üìä R√âSUM√â DES R√îLES"
echo "------------------"
psql $DATABASE_URL -c "
SELECT 
  r.name as role,
  r.display_name,
  r.color,
  COUNT(ur.user_id) as users_count
FROM roles r
LEFT JOIN user_roles ur ON r.id = ur.role_id
GROUP BY r.id, r.name, r.display_name, r.color
ORDER BY r.id;
"

echo ""
echo "üéâ CORRECTION TERMIN√âE!"
echo "======================"
echo ""
echo "üìã Prochaines √©tapes:"
echo "   1. Red√©marrez votre application LogiFlow"
echo "   2. Testez les pages Utilisateurs et R√¥les"
echo "   3. V√©rifiez que les couleurs s'affichent correctement"
echo ""
echo "üîç Si le probl√®me persiste:"
echo "   - Videz le cache du navigateur (Ctrl+F5)"
echo "   - V√©rifiez les logs de l'application"
echo ""

exit 0