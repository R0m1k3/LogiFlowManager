#!/bin/bash

echo "üîç Diagnostic complet des r√¥les en production..."

# 1. √âtat actuel des r√¥les
echo "=== √âTAT ACTUEL DES R√îLES ==="
docker exec -it logiflow_app psql -U logiflow_admin -d logiflow_db -c "
SELECT 
    r.id,
    r.name,
    r.display_name,
    r.color,
    r.description,
    r.is_active
FROM roles r
ORDER BY r.id;
"

# 2. Assignations des r√¥les aux utilisateurs
echo "=== ASSIGNATIONS DES R√îLES ==="
docker exec -it logiflow_app psql -U logiflow_admin -d logiflow_db -c "
SELECT 
    u.username,
    u.role as old_role_field,
    r.name as assigned_role,
    r.display_name,
    r.color,
    ur.assigned_at
FROM users u
LEFT JOIN user_roles ur ON u.id = ur.user_id
LEFT JOIN roles r ON ur.role_id = r.id
ORDER BY u.username;
"

# 3. Groupes assign√©s aux utilisateurs
echo "=== GROUPES ASSIGN√âS AUX UTILISATEURS ==="
docker exec -it logiflow_app psql -U logiflow_admin -d logiflow_db -c "
SELECT 
    u.username,
    g.name as group_name,
    g.color as group_color
FROM users u
LEFT JOIN user_groups ug ON u.id = ug.user_id
LEFT JOIN groups g ON ug.group_id = g.id
ORDER BY u.username, g.name;
"

# 4. V√©rifier les incoh√©rences
echo "=== INCOH√âRENCES D√âTECT√âES ==="
docker exec -it logiflow_app psql -U logiflow_admin -d logiflow_db -c "
SELECT 
    u.username,
    u.role as old_system_role,
    r.name as new_system_role,
    CASE 
        WHEN u.role != r.name THEN 'INCOH√âRENT'
        ELSE 'COH√âRENT'
    END as status
FROM users u
JOIN user_roles ur ON u.id = ur.user_id
JOIN roles r ON ur.role_id = r.id
WHERE u.role != r.name;
"

echo "‚úÖ Diagnostic termin√©!"